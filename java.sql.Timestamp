 1.String --> Timestamp: 

Timestamp time= new Timestamp(System.currentTimeMillis());//获取系统当前时间   
SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");  
String timeStr = df.format(time);   
time = Timestamp.valueOf(timeStr);   
System.out.println(time);//2017-05-06 15:54:21.0   


2.java.util.Date --> Timestamp
(1)
Date date = new Date();  
Timestamp ts = new Timestamp(date.getTime());  
(2)
Date date = new Date();    
DateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");    
String dateStr = sdf.format(date);  
Timestamp ts = Timestamp.valueOf(dateStr); //2017-05-06 15:54:21.0 

整理三：
通过构造方法创建Timestamp 对象,获取毫秒值有下面三种方法:

方法1:

System.currentTimeMillis(); 

方法2:

Calendar.getInstance().getTimeInMillis(); 

方法3: 

new Date().getTime();

测试证明:System.currentTimeMillis() 这种方式速度最快

Calendar.getInstance().getTimeInMillis() 这种方式速度最慢,因为Canlendar因为要处理时区问题会耗费很多的时间。

所以建议多使用第一种方式。

 

方法摘要 
 boolean after(Timestamp ts) 
          指示此 Timestamp 对象是否晚于给定的 Timestamp 对象。 
 boolean before(Timestamp ts) 
          指示此 Timestamp 对象是否早于给定的 Timestamp 对象。 
 int compareTo(Date o) 
          将此 Timestamp 对象与给定的 Date（必须为 Timestamp 对象）相比较。 
 int compareTo(Timestamp ts) 
          将此 Timestamp 对象与给定 Timestamp 对象相比较。 
 boolean equals(Object ts) 
          测试此对象是否等于给定的 Timestamp 对象。 
 boolean equals(Timestamp ts) 
          测试此 Timestamp 对象是否等于给定的 Timestamp 对象。 
 int getNanos() 
          获取此 Timestamp 对象的 nanos 值。 
 long getTime() 
          返回此 Timestamp 对象表示的自 1970 年 1 月 1 日 00:00:00 GMT 以来的毫秒数。 
 void setNanos(int n) 
          将此 Timestamp 对象的 nanos 字段设置为给定值。 
 void setTime(long time) 
          设置此 Timestamp 对象，以表示 1970 年 1 月 1 日 00:00:00 GMT 以后 time 毫秒的时间点。 
 String toString() 
          使用 JDBC 时间戳转义格式编排时间戳。 
static Timestamp valueOf(String s) 
          将使用 JDBC 时间戳转义格式的 String 对象转换为 Timestamp 值。 
实例代码:
tLotteryAnnouncement.setDateTime(new Timestamp(System.currentTimeMillis()));  
if(StringUtils.isNotBlank(tIsusesKj.getOpenTime())){  
    tLotteryAnnouncement.setOpenTime(Timestamp.valueOf(tIsusesKj.getOpenTime()));  
}else{  
    tLotteryAnnouncement.setOpenTime(new Timestamp(tIsusesKj.getModifyDate().getTime()));  
}  
